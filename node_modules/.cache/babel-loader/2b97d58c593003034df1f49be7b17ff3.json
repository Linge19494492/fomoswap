{"ast":null,"code":"import _regeneratorRuntime from\"/Users/zhaohongwei/Downloads/fomoswap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/zhaohongwei/Downloads/fomoswap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/zhaohongwei/Downloads/fomoswap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/zhaohongwei/Downloads/fomoswap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import conf from'./conf';import EventEmitter from'eventemitter3';var Wallet=/*#__PURE__*/function(){function Wallet(){_classCallCheck(this,Wallet);// tronWeb 对象\nthis.tronWrap=window.tronWeb;// 事件名字常量\nthis.eventConstant={wallet_connection:\"wallet_connection\"// 钱包连接\n// cornPool_balance_update:   conf['pool']['cornPoolAddress'],\n// pearlPool_balance_update:  conf['pool']['pearlPoolAddress'],\n// taiPool_balance_update:    conf['pool']['taiPoolAddress'],\n// usdtPool_balance_update:   conf['pool']['usdtPoolAddress'],\n// tigerPool_balance_update:  conf['pool']['tigerPoolAddress'],\n// tigercPool_balance_update: conf['pool']['tigercPoolAddress'],\n};// 数据，在这里获取，使用事件更新 bigNumber , 比较大小使用 comparedTo\n// this.store = {\n//     [conf['pool']['cornPoolAddress']]: {\n//         pawnNum:      0, // 抵押数量\n//         totalPawnNum: 0, // 总抵押数量\n//         rewardNum:    0, // 已获得奖金数\n//         lpTokenNum:   0 // lp token 余额数量\n//     },\n//\n//     [conf['pool']['pearlPoolAddress']]: {\n//         pawnNum:      0, // 抵押数量\n//         totalPawnNum: 0, // 总抵押数量\n//         rewardNum:    0, // 已获得奖金数\n//         lpTokenNum:   0 // lp token 余额数量\n//     },\n//\n//     [conf['pool']['taiPoolAddress']]: {\n//         pawnNum:      0, // 抵押数量\n//         totalPawnNum: 0, // 总抵押数量\n//         rewardNum:    0, // 已获得奖金数\n//         lpTokenNum:   0 // lp token 余额数量\n//     },\n//\n//     [conf['pool']['usdtPoolAddress']]: {\n//         pawnNum:      0, // 抵押数量\n//         totalPawnNum: 0, // 总抵押数量\n//         rewardNum:    0, // 已获得奖金数\n//         lpTokenNum:   0 // lp token 余额数量\n//     },\n//\n//     [conf['pool']['tigerPoolAddress']]: {\n//         pawnNum:      0, // 抵押数量\n//         totalPawnNum: 0, // 总抵押数量\n//         rewardNum:    0, // 已获得奖金数\n//         lpTokenNum:   0 // lp token 余额数量\n//     },\n//\n//     [conf['pool']['tigercPoolAddress']]: {\n//         pawnNum:      0, // 抵押数量\n//         totalPawnNum: 0, // 总抵押数量\n//         rewardNum:    0, // 已获得奖金数\n//         lpTokenNum:   0 // lp token 余额数量\n//     }\n//\n// }\n// 事件管理器\nthis.eventEmitter=new EventEmitter();this._init();}_createClass(Wallet,[{key:\"_init\",value:function _init(){var _this=this;var timerRec=setInterval(function(){if(window.tronWeb&&window.tronWeb.defaultAddress.base58){clearInterval(timerRec);_this.tronWrap=window.tronWeb;_this.eventEmitter.emit(_this.eventConstant.wallet_connection);// 派发钱包连接事件\n// 获得钱包后监听、网络、账户、节点等变化\n// window.addEventListener('message', function (e) {\n//   if (e.data.message && e.data.message.action == \"tabReply\") {\n//     window.location.reload();\n//   }\n//   if (e.data.message && e.data.message.action == \"setAccount\") {\n//     window.location.reload();\n//   }\n//   if (e.data.message && e.data.message.action == \"setNode\") {\n//     window.location.reload();\n//   }\n// });\n}},10);}// 获取默认地址\n},{key:\"getDefaultAddress\",value:function getDefaultAddress(){if(typeof this.tronWrap==='undefined'){return{code:-1,msg:'未连接钱包'};}return{code:0,data:this.tronWrap.defaultAddress.base58};}/**\n     * 根据合约地址查询余额\n     * 查询余额 balanceOf(address account) view\n     *\n     * @param {string} contractAddress 合约地址\n     * @param {string} myAccount 查询谁的账户\n     */},{key:\"_getBalanceOf\",value:function(){var _getBalanceOf2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(contractAddress,myAccount){var args,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(typeof this.tronWrap==='undefined'||this.getDefaultAddress().code===-1)){_context.next=2;break;}return _context.abrupt(\"return\",{code:-1,msg:'未连接钱包'});case 2:args=[{type:\"address\",value:myAccount}];_context.next=5;return this.tronWrap.transactionBuilder.triggerConstantContract(contractAddress,\"balanceOf(address)\",{},args,this.getDefaultAddress().data);case 5:result=_context.sent;return _context.abrupt(\"return\",{code:0,data:this.tronWrap.toBigNumber(\"0x\"+result.constant_result[0])});case 7:case\"end\":return _context.stop();}}},_callee,this);}));function _getBalanceOf(_x,_x2){return _getBalanceOf2.apply(this,arguments);}return _getBalanceOf;}()/**\n     * 根据合约地址查询总量\n     * 查询总量 totalSupply() view\n     *\n     * @param {string} contractAddress 合约地址\n     */},{key:\"_getTotalSupply\",value:function(){var _getTotalSupply2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(contractAddress){var contract,result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(typeof this.tronWrap==='undefined')){_context2.next=2;break;}return _context2.abrupt(\"return\",{code:-1,msg:'未连接钱包'});case 2:_context2.next=4;return this.tronWrap.contract().at(contractAddress);case 4:contract=_context2.sent;_context2.next=7;return contract.totalSupply().call();case 7:result=_context2.sent;console.log('根据合约地址查询总量>>>',result);return _context2.abrupt(\"return\",{code:0,data:this.tronWrap.toBigNumber(result._hex)});case 10:case\"end\":return _context2.stop();}}},_callee2,this);}));function _getTotalSupply(_x3){return _getTotalSupply2.apply(this,arguments);}return _getTotalSupply;}()/**\n     * 根据合约地址查询、我的奖励\n     * 我的奖励 earned(address account) view\n     * @param {string} contractAddress 合约地址\n     * @param {string} myAccount 查询谁的账户\n     */},{key:\"_getEarned\",value:function(){var _getEarned2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(contractAddress,myAccount){var contract,result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(typeof this.tronWrap==='undefined')){_context3.next=2;break;}return _context3.abrupt(\"return\",{code:-1,msg:'未连接钱包'});case 2:_context3.next=4;return this.tronWrap.contract().at(contractAddress);case 4:contract=_context3.sent;_context3.next=7;return contract.earned(this.getDefaultAddress().data).call();case 7:result=_context3.sent;console.log('根据合约地址查询、我的奖励>>>',result);return _context3.abrupt(\"return\",{code:0,data:this.tronWrap.toBigNumber(result._hex)});case 10:case\"end\":return _context3.stop();}}},_callee3,this);}));function _getEarned(_x4,_x5){return _getEarned2.apply(this,arguments);}return _getEarned;}()/**\n     * 根据合约地址、存款\n     * 存款 stake(uint256 amount)\n     * @param {string} contractAddress 合约地址\n     * @param {number} myNum 查询谁的账户\n     */},{key:\"stake\",value:function(){var _stake=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(contractAddress,myNum){var contract,result;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(typeof this.tronWrap==='undefined')){_context4.next=2;break;}return _context4.abrupt(\"return\",{code:-1,msg:'未连接钱包'});case 2:_context4.next=4;return this.tronWrap.contract().at(contractAddress);case 4:contract=_context4.sent;_context4.next=7;return contract.stake(this.tronWrap.toBigNumber(myNum).toString(10)).send({feeLimit:1e8,callValue:0,shouldPollResponse:!0});case 7:result=_context4.sent;console.log('根据合约地址、存款>>>',result);return _context4.abrupt(\"return\",result);case 10:case\"end\":return _context4.stop();}}},_callee4,this);}));function stake(_x6,_x7){return _stake.apply(this,arguments);}return stake;}()/**\n     * 根据合约地址、安全的存款。检验是否授权\n     * 存款 safeInvestment(uint256 amount)\n     * @param {string} lpAddress lp 合约地址\n     * @param {string} contractAddress 合约地址\n     * @param {number} myNum 查询谁的账户\n     */},{key:\"safeInvest\",value:function(){var _safeInvest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(contractAddress,lpAddress,myNum){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return this.stake(contractAddress,myNum);case 2:return _context5.abrupt(\"return\",_context5.sent);case 3:case\"end\":return _context5.stop();}}},_callee5,this);}));function safeInvest(_x8,_x9,_x10){return _safeInvest.apply(this,arguments);}return safeInvest;}()/**\n     * 根据合约地址、撤出资金池\n     * 存款 withdraw(uint256 amount)\n     * @param {string} contractAddress 合约地址\n     * @param {number} myNum 查询谁的账户\n     */},{key:\"withdraw\",value:function(){var _withdraw=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(contractAddress,myNum){var contract,result;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!(typeof this.tronWrap==='undefined')){_context6.next=2;break;}return _context6.abrupt(\"return\",{code:-1,msg:'未连接钱包'});case 2:_context6.next=4;return this.tronWrap.contract().at(contractAddress);case 4:contract=_context6.sent;_context6.next=7;return contract.withdraw(this.tronWrap.toBigNumber(myNum).toString(10)).send({feeLimit:1e8,callValue:0,shouldPollResponse:!0});case 7:result=_context6.sent;console.log('根据合约地址、撤出资金池>>>',result);return _context6.abrupt(\"return\",result);case 10:case\"end\":return _context6.stop();}}},_callee6,this);}));function withdraw(_x11,_x12){return _withdraw.apply(this,arguments);}return withdraw;}()/**\n     * 根据合约地址、领取奖励\n     * 领取奖励 getReward()\n     * @param {string} contractAddress 合约地址\n     */},{key:\"getReward\",value:function(){var _getReward=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(contractAddress){var contract,result;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(!(typeof this.tronWrap==='undefined')){_context7.next=2;break;}return _context7.abrupt(\"return\",{code:-1,msg:'未连接钱包'});case 2:_context7.next=4;return this.tronWrap.contract().at(contractAddress);case 4:contract=_context7.sent;_context7.next=7;return contract.getReward().send({feeLimit:1e8,callValue:0,shouldPollResponse:!0});case 7:result=_context7.sent;console.log('根据合约地址、领取奖励>>>',result);return _context7.abrupt(\"return\",result);case 10:case\"end\":return _context7.stop();}}},_callee7,this);}));function getReward(_x13){return _getReward.apply(this,arguments);}return getReward;}()/**\n     * 根据合约地址、退出\n     * 领取奖励 exit()\n     * @param {string} contractAddress 合约地址\n     */},{key:\"exit\",value:function(){var _exit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(contractAddress){var contract,result;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:if(!(typeof this.tronWrap==='undefined')){_context8.next=2;break;}return _context8.abrupt(\"return\",{code:-1,msg:'未连接钱包'});case 2:_context8.next=4;return this.tronWrap.contract().at(contractAddress);case 4:contract=_context8.sent;_context8.next=7;return contract.exit().send({feeLimit:1e8,callValue:0,shouldPollResponse:!0});case 7:result=_context8.sent;console.log('根据合约地址、退出>>>',result);return _context8.abrupt(\"return\",result);case 10:case\"end\":return _context8.stop();}}},_callee8,this);}));function exit(_x14){return _exit.apply(this,arguments);}return exit;}()/**\n     * 根据合约地址、授权金额\n     * 授权金额 \"approve(address,uint256)\"\n     * @param {string} contractAddress 合约地址\n     * @param {string} spendAccount 花钱的人地址\n     * @param {number} myNum 数量\n     */},{key:\"approve\",value:function(){var _approve=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(contractAddress,spendAccount,myNum){var r,result,aaa,bb;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:if(!(typeof this.tronWrap==='undefined'||this.getDefaultAddress().code===-1)){_context9.next=2;break;}return _context9.abrupt(\"return\",{code:-1,msg:'未连接钱包'});case 2:r=[{type:\"address\",value:spendAccount},{type:\"uint256\",value:\"115792089237316195423570985008687907853269984665640564039457584007913129639934\"}];_context9.next=5;return this.tronWrap.transactionBuilder.triggerSmartContract(contractAddress,\"approve(address,uint256)\",{},r,this.getDefaultAddress().data);case 5:result=_context9.sent;_context9.next=8;return this.tronWrap.trx.sign(result.transaction);case 8:aaa=_context9.sent;bb=this.tronWrap.trx.sendRawTransaction(aaa);console.log('根据合约地址、授权金额>>>',bb);return _context9.abrupt(\"return\",bb);case 12:case\"end\":return _context9.stop();}}},_callee9,this);}));function approve(_x15,_x16,_x17){return _approve.apply(this,arguments);}return approve;}()/**\n     * 根据合约地址查询、查询授权金额\n     * 查询授权金额 \"allowance(address,address)\" 我的钱可以谁花\n     * @param {string} contractAddress 合约地址\n     * @param {string} myAccount 我的钱\n     * @param {string} spendAccount 可以花钱的人\n     */},{key:\"allowance\",value:function(){var _allowance=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(contractAddress,myAccount,spendAccount){var arg,result;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:if(!(typeof this.tronWrap==='undefined')){_context10.next=2;break;}return _context10.abrupt(\"return\",{code:-1,msg:'未连接钱包'});case 2:arg=[{type:\"address\",value:this.getDefaultAddress().data},{type:\"address\",value:spendAccount}];_context10.next=5;return this.tronWrap.transactionBuilder.triggerConstantContract(contractAddress,\"allowance(address,address)\",{},arg,this.getDefaultAddress().data);case 5:result=_context10.sent;return _context10.abrupt(\"return\",{code:0,data:this.tronWrap.toBigNumber(\"0x\"+result.constant_result[0])});case 7:case\"end\":return _context10.stop();}}},_callee10,this);}));function allowance(_x18,_x19,_x20){return _allowance.apply(this,arguments);}return allowance;}()/**\n     * 获取单个池子目前 totalSupply\n     * @param {string} contractAddress 合约地址\n     * @returns {Promise<void>}\n     */},{key:\"poolTotal\",value:function(){var _poolTotal=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(contractAddress){var contract,result;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.next=2;return this.tronWrap.contract().at(contractAddress);case 2:contract=_context11.sent;_context11.next=5;return contract.totalSupply().call();case 5:result=_context11.sent;console.log('根据合约地址、获取 totalSupply>>>',result);return _context11.abrupt(\"return\",this.tronWrap.toDecimal(result));case 8:case\"end\":return _context11.stop();}}},_callee11,this);}));function poolTotal(_x21){return _poolTotal.apply(this,arguments);}return poolTotal;}()},{key:\"getLP\",value:function getLP(contractName){var _this2=this;return new Promise(function(resolve,reject){var trigger=_this2.tronWrap.transactionBuilder.triggerConfirmedConstantContract(contractName,\"totalSupply()\",{});trigger.then(function(tx){if(!tx.result.result){reject(\"result is false\");}var amount=_this2.tronWrap.toDecimal(\"0x\"+tx.constant_result[0]);resolve(amount);}).catch(function(err){reject(err);});});}// lp 占 erc20 数量\n},{key:\"getContractToUSDT\",value:function getContractToUSDT(erc20Contract,lPContract){var _this3=this;return new Promise(function(resolve,reject){var trigger=_this3.tronWrap.transactionBuilder.triggerConfirmedConstantContract(erc20Contract,\"balanceOf(address)\",{},[{type:\"address\",value:lPContract}],lPContract);trigger.then(function(tx){if(!tx.result.result){throw new Error(\"result is false\");}var amount=_this3.tronWrap.toDecimal(\"0x\"+tx.constant_result[0]);resolve(amount);// console.log(tronWeb.fromSun(amount))\n}).catch(function(err){reject(err);});});}},{key:\"getTrxToTokenPrice\",value:function getTrxToTokenPrice(lpContract,quantity){var _this4=this;return new Promise(function(resolve,reject){var trigger=_this4.tronWrap.transactionBuilder.triggerConfirmedConstantContract(lpContract,\"getTokenToTrxOutputPrice(uint256)\",{},[{type:\"uint256\",value:quantity}]);trigger.then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(tx){var amount;return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:amount=_this4.tronWrap.toDecimal(\"0x\"+tx.constant_result[0]);resolve(amount);case 2:case\"end\":return _context12.stop();}}},_callee12);}));return function(_x22){return _ref.apply(this,arguments);};}()).catch(function(err){reject(err);});});}},{key:\"getTokenUSDTPrice\",value:function getTokenUSDTPrice(lpContract,quantity){var _this5=this;return new Promise(function(resolve,reject){var trigger=_this5.tronWrap.transactionBuilder.triggerConfirmedConstantContract(lpContract,\"getTrxToTokenInputPrice(uint256)\",{},[{type:\"uint256\",value:quantity}]);trigger.then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee13(tx){var amount;return _regeneratorRuntime.wrap(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:amount=_this5.tronWrap.toDecimal(\"0x\"+tx.constant_result[0]);resolve(amount);case 2:case\"end\":return _context13.stop();}}},_callee13);}));return function(_x23){return _ref2.apply(this,arguments);};}()).catch(function(err){reject(err);});});}/*\n    * 池子 a 年化\n    * poolContract TQiGSmof81YPCYWzaPT8aTmMEt82dGymAt\n    * lpContract TWhR2Be1XLGa4z8xgvPDvfArA1pmCtz6Tq\n    * trc20Contract THRBFeEwKUoREVJCFpLm7JF4ph24bZAVDG\n    *\n    * fieldRate 1天挖矿速率\n    * */},{key:\"poolYearRate\",value:function(){var _poolYearRate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee14(trc20Contract,poolContract,lpContract,baseTokenContract,fixedRate){var myLP,fullLP,ratio,lpTotal,tig,toTrx,a,usdtToTrx,a_rate,yearRate;return _regeneratorRuntime.wrap(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:console.log(trc20Contract,poolContract,lpContract,baseTokenContract);_context14.next=3;return this.getLP(poolContract);case 3:myLP=_context14.sent;_context14.next=6;return this.getLP(lpContract);case 6:fullLP=_context14.sent;ratio=myLP/fullLP;console.log(\"myLP: \"+myLP);console.log(\"fullLP: \"+fullLP);console.log(\"占比: \"+ratio);console.log(trc20Contract,lpContract);_context14.next=14;return this.getContractToUSDT(trc20Contract,lpContract);case 14:lpTotal=_context14.sent;lpTotal=lpTotal/1e18;console.log(\"LP 占 trc20 数量: \"+lpTotal);_context14.next=19;return this.getTrxToTokenPrice(baseTokenContract,1);case 19:tig=_context14.sent;tig=1/(tig/1e12);_context14.next=23;return this.getTrxToTokenPrice(lpContract,1);case 23:toTrx=_context14.sent;toTrx=1/(toTrx/1e12);a=ratio*(lpTotal*2)*toTrx;console.log(\"1 token: \"+tig+\"trx\");console.log(\"1 token to trx: \"+toTrx+\"trx\");console.log(\"a市值: \"+a);fixedRate=fixedRate||0;_context14.next=32;return this.getTokenUSDTPrice(\"TQn9Y2khEsLJW1ChVWFMSMeRDow5KcbLSE\",1e6);case 32:usdtToTrx=_context14.sent;usdtToTrx=usdtToTrx/1e6;console.log(\"1 trx: \"+usdtToTrx+\"usdt\");a_rate=fixedRate*tig/a;console.log(\"a_rate: \"+a_rate);// console.log(\"年化: \" + Math.pow(a_rate + 1, 356) * 100)\nyearRate=(a_rate+1)*356*100;console.log(\"年化: \"+yearRate);console.log(\"----------\");return _context14.abrupt(\"return\",new Promise(function(resolve,reject){resolve(Math.floor(yearRate));}));case 41:case\"end\":return _context14.stop();}}},_callee14,this);}));function poolYearRate(_x24,_x25,_x26,_x27,_x28){return _poolYearRate.apply(this,arguments);}return poolYearRate;}()},{key:\"poolUSDTYearRate\",value:function(){var _poolUSDTYearRate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee15(trc20Contract,poolContract,lpContract,baseTokenContract,fixedRate){var myLP,fullLP,ratio,lpTotal,a,tig,usdtToTrx,a_rate,yearRate;return _regeneratorRuntime.wrap(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:console.log(trc20Contract,poolContract,lpContract,baseTokenContract);_context15.next=3;return this.getLP(poolContract);case 3:myLP=_context15.sent;_context15.next=6;return this.getLP(lpContract);case 6:fullLP=_context15.sent;ratio=myLP/fullLP;console.log(\"myLP: \"+myLP);console.log(\"fullLP: \"+fullLP);console.log(\"占比: \"+ratio);_context15.next=13;return this.getContractToUSDT(trc20Contract,lpContract);case 13:lpTotal=_context15.sent;lpTotal=lpTotal/1e6;console.log(\"LP 占 trc20 数量: \"+lpTotal);a=ratio*(lpTotal*2);console.log(\"a市值: \"+a);// let fieldRate = 642857\nfixedRate=fixedRate||0;_context15.next=21;return this.getTrxToTokenPrice(baseTokenContract,1);case 21:tig=_context15.sent;tig=1/(tig/1e12);console.log(\"1 token: \"+tig+\"trx\");_context15.next=26;return this.getTokenUSDTPrice(\"TQn9Y2khEsLJW1ChVWFMSMeRDow5KcbLSE\",1e6);case 26:usdtToTrx=_context15.sent;usdtToTrx=usdtToTrx/1e6;console.log(\"1 trx: \"+usdtToTrx+\"usdt\");// myLP: 98455000\n// wallet.js:565 fullLP: 2118588115628446\n// wallet.js:566 占比: 4.647198729838757e-8\n// wallet.js:571 LP 占 trc20 数量: 64125433.456946\n// wallet.js:532 1 token: 0.0169127445614111trx\n// wallet.js:576 a市值: 5.960072658229584\n// wallet.js:593 a_rate: 5.056624220777389\n// wallet.js:598 年化: 215615.82225967504\na_rate=fixedRate*tig*usdtToTrx/a;console.log(\"a_rate: \"+a_rate);// console.log(\"年化: \" + Math.pow(a_rate + 1, 356) * 100)\nyearRate=(a_rate+1)*356*100;console.log(\"年化: \"+yearRate);console.log(\"----------\");return _context15.abrupt(\"return\",new Promise(function(resolve,reject){resolve(Math.floor(yearRate));}));case 35:case\"end\":return _context15.stop();}}},_callee15,this);}));function poolUSDTYearRate(_x29,_x30,_x31,_x32,_x33){return _poolUSDTYearRate.apply(this,arguments);}return poolUSDTYearRate;}()},{key:\"readMint\",value:function(){var _readMint=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee16(contractAddress){var contract,result;return _regeneratorRuntime.wrap(function _callee16$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:_context16.next=2;return this.tronWrap.contract().at(contractAddress);case 2:contract=_context16.sent;_context16.next=5;return contract.starttime().call();case 5:result=_context16.sent;return _context16.abrupt(\"return\",this.tronWrap.toDecimal(result));case 7:case\"end\":return _context16.stop();}}},_callee16,this);}));function readMint(_x34){return _readMint.apply(this,arguments);}return readMint;}()},{key:\"rewardRate\",value:function(){var _rewardRate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee17(contractAddress){var contract,result;return _regeneratorRuntime.wrap(function _callee17$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:_context17.next=2;return this.tronWrap.contract().at(contractAddress);case 2:contract=_context17.sent;_context17.next=5;return contract.rewardRate().call();case 5:result=_context17.sent;return _context17.abrupt(\"return\",this.tronWrap.toDecimal(result));case 7:case\"end\":return _context17.stop();}}},_callee17,this);}));function rewardRate(_x35){return _rewardRate.apply(this,arguments);}return rewardRate;}()}]);return Wallet;}();export default new Wallet();","map":{"version":3,"sources":["/Users/zhaohongwei/Downloads/fomoswap/src/tools/wallet.js"],"names":["conf","EventEmitter","Wallet","tronWrap","window","tronWeb","eventConstant","wallet_connection","eventEmitter","_init","timerRec","setInterval","defaultAddress","base58","clearInterval","emit","code","msg","data","contractAddress","myAccount","getDefaultAddress","args","type","value","transactionBuilder","triggerConstantContract","result","toBigNumber","constant_result","contract","at","totalSupply","call","console","log","_hex","earned","myNum","stake","toString","send","feeLimit","callValue","shouldPollResponse","lpAddress","withdraw","getReward","exit","spendAccount","r","triggerSmartContract","trx","sign","transaction","aaa","bb","sendRawTransaction","arg","toDecimal","contractName","Promise","resolve","reject","trigger","triggerConfirmedConstantContract","then","tx","amount","catch","err","erc20Contract","lPContract","Error","lpContract","quantity","trc20Contract","poolContract","baseTokenContract","fixedRate","getLP","myLP","fullLP","ratio","getContractToUSDT","lpTotal","getTrxToTokenPrice","tig","toTrx","a","getTokenUSDTPrice","usdtToTrx","a_rate","yearRate","Math","floor","starttime","rewardRate"],"mappings":"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","sourcesContent":["import conf from './conf'\nimport EventEmitter from 'eventemitter3'\n\nclass Wallet {\n\n    constructor() {\n\n        // tronWeb 对象\n        this.tronWrap = window.tronWeb\n\n        // 事件名字常量\n        this.eventConstant = {\n            wallet_connection: \"wallet_connection\", // 钱包连接\n\n            // cornPool_balance_update:   conf['pool']['cornPoolAddress'],\n            // pearlPool_balance_update:  conf['pool']['pearlPoolAddress'],\n            // taiPool_balance_update:    conf['pool']['taiPoolAddress'],\n            // usdtPool_balance_update:   conf['pool']['usdtPoolAddress'],\n            // tigerPool_balance_update:  conf['pool']['tigerPoolAddress'],\n            // tigercPool_balance_update: conf['pool']['tigercPoolAddress'],\n        }\n\n        // 数据，在这里获取，使用事件更新 bigNumber , 比较大小使用 comparedTo\n        // this.store = {\n        //     [conf['pool']['cornPoolAddress']]: {\n        //         pawnNum:      0, // 抵押数量\n        //         totalPawnNum: 0, // 总抵押数量\n        //         rewardNum:    0, // 已获得奖金数\n        //         lpTokenNum:   0 // lp token 余额数量\n        //     },\n        //\n        //     [conf['pool']['pearlPoolAddress']]: {\n        //         pawnNum:      0, // 抵押数量\n        //         totalPawnNum: 0, // 总抵押数量\n        //         rewardNum:    0, // 已获得奖金数\n        //         lpTokenNum:   0 // lp token 余额数量\n        //     },\n        //\n        //     [conf['pool']['taiPoolAddress']]: {\n        //         pawnNum:      0, // 抵押数量\n        //         totalPawnNum: 0, // 总抵押数量\n        //         rewardNum:    0, // 已获得奖金数\n        //         lpTokenNum:   0 // lp token 余额数量\n        //     },\n        //\n        //     [conf['pool']['usdtPoolAddress']]: {\n        //         pawnNum:      0, // 抵押数量\n        //         totalPawnNum: 0, // 总抵押数量\n        //         rewardNum:    0, // 已获得奖金数\n        //         lpTokenNum:   0 // lp token 余额数量\n        //     },\n        //\n        //     [conf['pool']['tigerPoolAddress']]: {\n        //         pawnNum:      0, // 抵押数量\n        //         totalPawnNum: 0, // 总抵押数量\n        //         rewardNum:    0, // 已获得奖金数\n        //         lpTokenNum:   0 // lp token 余额数量\n        //     },\n        //\n        //     [conf['pool']['tigercPoolAddress']]: {\n        //         pawnNum:      0, // 抵押数量\n        //         totalPawnNum: 0, // 总抵押数量\n        //         rewardNum:    0, // 已获得奖金数\n        //         lpTokenNum:   0 // lp token 余额数量\n        //     }\n        //\n        // }\n\n        // 事件管理器\n        this.eventEmitter = new EventEmitter()\n\n        this._init()\n    }\n\n    _init() {\n        const timerRec = setInterval(() => {\n            if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\n                clearInterval(timerRec)\n                this.tronWrap = window.tronWeb\n\n                this.eventEmitter.emit(this.eventConstant.wallet_connection) // 派发钱包连接事件\n\n                // 获得钱包后监听、网络、账户、节点等变化\n                // window.addEventListener('message', function (e) {\n                //   if (e.data.message && e.data.message.action == \"tabReply\") {\n                //     window.location.reload();\n                //   }\n\n                //   if (e.data.message && e.data.message.action == \"setAccount\") {\n                //     window.location.reload();\n                //   }\n\n                //   if (e.data.message && e.data.message.action == \"setNode\") {\n                //     window.location.reload();\n                //   }\n                // });\n            }\n        }, 10)\n    }\n\n    // 获取默认地址\n    getDefaultAddress() {\n\n        if (typeof this.tronWrap === 'undefined') {\n            return {\n                code: -1,\n                msg:  '未连接钱包'\n            }\n        }\n\n        return {\n            code: 0,\n            data: this.tronWrap.defaultAddress.base58\n        }\n    }\n\n    /**\n     * 根据合约地址查询余额\n     * 查询余额 balanceOf(address account) view\n     *\n     * @param {string} contractAddress 合约地址\n     * @param {string} myAccount 查询谁的账户\n     */\n    async _getBalanceOf(contractAddress, myAccount) {\n\n        if (typeof this.tronWrap === 'undefined' || this.getDefaultAddress().code === -1) {\n            return {\n                code: -1,\n                msg:  '未连接钱包'\n            }\n        }\n\n        const args = [\n            {\n                type:  \"address\",\n                value: myAccount\n            }\n        ]\n\n        const result = await this.tronWrap\n            .transactionBuilder\n            .triggerConstantContract(\n                contractAddress,\n                \"balanceOf(address)\",\n                {},\n                args,\n                this.getDefaultAddress().data\n            )\n\n        return {\n            code: 0,\n            data: this.tronWrap.toBigNumber(\"0x\" + result.constant_result[0])\n        }\n    }\n\n    /**\n     * 根据合约地址查询总量\n     * 查询总量 totalSupply() view\n     *\n     * @param {string} contractAddress 合约地址\n     */\n    async _getTotalSupply(contractAddress) {\n\n        if (typeof this.tronWrap === 'undefined') {\n            return {\n                code: -1,\n                msg:  '未连接钱包'\n            }\n        }\n\n        const contract = await this.tronWrap.contract().at(contractAddress)\n        const result   = await contract.totalSupply().call()\n\n        console.log('根据合约地址查询总量>>>', result)\n\n        return {\n            code: 0,\n            data: this.tronWrap.toBigNumber(result._hex)\n        }\n    }\n\n    /**\n     * 根据合约地址查询、我的奖励\n     * 我的奖励 earned(address account) view\n     * @param {string} contractAddress 合约地址\n     * @param {string} myAccount 查询谁的账户\n     */\n    async _getEarned(contractAddress, myAccount) {\n\n        if (typeof this.tronWrap === 'undefined') {\n            return {\n                code: -1,\n                msg:  '未连接钱包'\n            }\n        }\n\n        const contract = await this.tronWrap.contract().at(contractAddress)\n\n        const result = await contract.earned(this.getDefaultAddress().data).call()\n\n        console.log('根据合约地址查询、我的奖励>>>', result)\n\n        return {\n            code: 0,\n            data: this.tronWrap.toBigNumber(result._hex)\n        }\n    }\n\n    /**\n     * 根据合约地址、存款\n     * 存款 stake(uint256 amount)\n     * @param {string} contractAddress 合约地址\n     * @param {number} myNum 查询谁的账户\n     */\n    async stake(contractAddress, myNum) {\n\n        if (typeof this.tronWrap === 'undefined') {\n            return {\n                code: -1,\n                msg:  '未连接钱包'\n            }\n        }\n\n        const contract = await this.tronWrap.contract().at(contractAddress)\n\n        // myNum 处理下精度、单位转换问题\n        const result = await contract.stake(this.tronWrap.toBigNumber(myNum).toString(10)).send({\n            feeLimit:           1e8,\n            callValue:          0,\n            shouldPollResponse: !0\n        })\n\n        console.log('根据合约地址、存款>>>', result)\n\n        return result\n    }\n\n    /**\n     * 根据合约地址、安全的存款。检验是否授权\n     * 存款 safeInvestment(uint256 amount)\n     * @param {string} lpAddress lp 合约地址\n     * @param {string} contractAddress 合约地址\n     * @param {number} myNum 查询谁的账户\n     */\n    async safeInvest(contractAddress, lpAddress, myNum) {\n\n        return await this.stake(contractAddress, myNum)\n\n    }\n\n\n    /**\n     * 根据合约地址、撤出资金池\n     * 存款 withdraw(uint256 amount)\n     * @param {string} contractAddress 合约地址\n     * @param {number} myNum 查询谁的账户\n     */\n    async withdraw(contractAddress, myNum) {\n        if (typeof this.tronWrap === 'undefined') {\n            return {\n                code: -1,\n                msg:  '未连接钱包'\n            }\n        }\n\n        const contract = await this.tronWrap.contract().at(contractAddress)\n\n        // myNum 处理下精度、单位转换问题\n        const result = await contract.withdraw(this.tronWrap.toBigNumber(myNum).toString(10)).send({\n            feeLimit:           1e8,\n            callValue:          0,\n            shouldPollResponse: !0\n        })\n\n        console.log('根据合约地址、撤出资金池>>>', result)\n\n        return result\n    }\n\n    /**\n     * 根据合约地址、领取奖励\n     * 领取奖励 getReward()\n     * @param {string} contractAddress 合约地址\n     */\n    async getReward(contractAddress) {\n\n        if (typeof this.tronWrap === 'undefined') {\n            return {\n                code: -1,\n                msg:  '未连接钱包'\n            }\n        }\n\n        const contract = await this.tronWrap.contract().at(contractAddress)\n\n        const result = await contract.getReward().send({\n            feeLimit:           1e8,\n            callValue:          0,\n            shouldPollResponse: !0\n        })\n\n        console.log('根据合约地址、领取奖励>>>', result)\n\n        return result\n    }\n\n    /**\n     * 根据合约地址、退出\n     * 领取奖励 exit()\n     * @param {string} contractAddress 合约地址\n     */\n    async exit(contractAddress) {\n\n        if (typeof this.tronWrap === 'undefined') {\n            return {\n                code: -1,\n                msg:  '未连接钱包'\n            }\n        }\n\n        const contract = await this.tronWrap.contract().at(contractAddress)\n\n        const result = await contract.exit().send({\n            feeLimit:           1e8,\n            callValue:          0,\n            shouldPollResponse: !0\n        })\n\n        console.log('根据合约地址、退出>>>', result)\n\n        return result\n    }\n\n    /**\n     * 根据合约地址、授权金额\n     * 授权金额 \"approve(address,uint256)\"\n     * @param {string} contractAddress 合约地址\n     * @param {string} spendAccount 花钱的人地址\n     * @param {number} myNum 数量\n     */\n    async approve(contractAddress, spendAccount, myNum) {\n\n        if (typeof this.tronWrap === 'undefined' || this.getDefaultAddress().code === -1) {\n            return {\n                code: -1,\n                msg:  '未连接钱包'\n            }\n        }\n\n        const r = [\n            {\n                type:  \"address\",\n                value: spendAccount\n            }, {\n                type:  \"uint256\",\n                value: \"115792089237316195423570985008687907853269984665640564039457584007913129639934\"\n            }\n        ]\n\n        const result = await this.tronWrap\n            .transactionBuilder\n            .triggerSmartContract(\n                contractAddress,\n                \"approve(address,uint256)\",\n                {},\n                r,\n                this.getDefaultAddress().data\n            )\n\n        const aaa = await this.tronWrap.trx.sign(result.transaction)\n        const bb  = this.tronWrap.trx.sendRawTransaction(aaa)\n        console.log('根据合约地址、授权金额>>>', bb)\n\n        return bb\n    }\n\n    /**\n     * 根据合约地址查询、查询授权金额\n     * 查询授权金额 \"allowance(address,address)\" 我的钱可以谁花\n     * @param {string} contractAddress 合约地址\n     * @param {string} myAccount 我的钱\n     * @param {string} spendAccount 可以花钱的人\n     */\n    async allowance(contractAddress, myAccount, spendAccount) {\n\n        if (typeof this.tronWrap === 'undefined') {\n            return {\n                code: -1,\n                msg:  '未连接钱包'\n            }\n        }\n\n        const arg = [\n            {\n                type:  \"address\",\n                value: this.getDefaultAddress().data\n            }, {\n                type:  \"address\",\n                value: spendAccount\n            }\n        ]\n\n        const result = await this.tronWrap\n            .transactionBuilder\n            .triggerConstantContract(\n                contractAddress,\n                \"allowance(address,address)\",\n                {},\n                arg,\n                this.getDefaultAddress().data\n            )\n\n        return {\n            code: 0,\n            data: this.tronWrap.toBigNumber(\"0x\" + result.constant_result[0])\n        }\n\n    }\n\n    /**\n     * 获取单个池子目前 totalSupply\n     * @param {string} contractAddress 合约地址\n     * @returns {Promise<void>}\n     */\n    async poolTotal(contractAddress) {\n        const contract = await this.tronWrap.contract().at(contractAddress)\n\n        const result = await contract.totalSupply().call()\n\n        console.log('根据合约地址、获取 totalSupply>>>', result)\n\n        return this.tronWrap.toDecimal(result)\n    }\n\n    getLP(contractName) {\n        return new Promise((resolve, reject) => {\n            let trigger = this.tronWrap.transactionBuilder.triggerConfirmedConstantContract(contractName, `totalSupply()`, {})\n\n            trigger.then(tx => {\n                if (!tx.result.result) {\n                    reject(\"result is false\")\n                }\n\n                let amount = this.tronWrap.toDecimal(\"0x\" + tx.constant_result[0])\n\n                resolve(amount)\n            }).catch(err => {\n                reject(err)\n            })\n        })\n    }\n\n    // lp 占 erc20 数量\n    getContractToUSDT(erc20Contract, lPContract) {\n        return new Promise((resolve, reject) => {\n            const trigger = this.tronWrap.transactionBuilder.triggerConfirmedConstantContract(erc20Contract, `balanceOf(address)`, {},\n                [\n                    {\n                        type:  `address`,\n                        value: lPContract,\n                    }\n                ], lPContract)\n\n            trigger.then(tx => {\n                if (!tx.result.result) {\n                    throw new Error(`result is false`)\n                }\n\n                let amount = this.tronWrap.toDecimal(\"0x\" + tx.constant_result[0])\n\n                resolve(amount)\n                // console.log(tronWeb.fromSun(amount))\n            }).catch(err => {\n                reject(err)\n            })\n        })\n    }\n\n    getTrxToTokenPrice(lpContract, quantity) {\n        return new Promise((resolve, reject) => {\n            let trigger = this.tronWrap.transactionBuilder.triggerConfirmedConstantContract(lpContract, `getTokenToTrxOutputPrice(uint256)`, {},\n                [\n                    {\n                        type:  `uint256`,\n                        value: quantity,\n                    }\n                ])\n\n            trigger.then(async tx => {\n                let amount = this.tronWrap.toDecimal(\"0x\" + tx.constant_result[0])\n\n                resolve(amount)\n            }).catch(err => {\n                reject(err)\n            })\n\n        })\n    }\n\n    getTokenUSDTPrice(lpContract, quantity) {\n        return new Promise((resolve, reject) => {\n            let trigger = this.tronWrap.transactionBuilder.triggerConfirmedConstantContract(lpContract, `getTrxToTokenInputPrice(uint256)`, {},\n                [\n                    {\n                        type:  `uint256`,\n                        value: quantity,\n                    }\n                ])\n\n            trigger.then(async tx => {\n                let amount = this.tronWrap.toDecimal(\"0x\" + tx.constant_result[0])\n\n                resolve(amount)\n            }).catch(err => {\n                reject(err)\n            })\n\n        })\n    }\n\n    /*\n    * 池子 a 年化\n    * poolContract TQiGSmof81YPCYWzaPT8aTmMEt82dGymAt\n    * lpContract TWhR2Be1XLGa4z8xgvPDvfArA1pmCtz6Tq\n    * trc20Contract THRBFeEwKUoREVJCFpLm7JF4ph24bZAVDG\n    *\n    * fieldRate 1天挖矿速率\n    * */\n    async poolYearRate(trc20Contract, poolContract, lpContract, baseTokenContract, fixedRate) {\n        console.log(trc20Contract, poolContract, lpContract, baseTokenContract)\n\n        let myLP   = await this.getLP(poolContract)\n        let fullLP = await this.getLP(lpContract)\n        let ratio  = myLP / fullLP\n\n        console.log(\"myLP: \" + myLP)\n        console.log(\"fullLP: \" + fullLP)\n        console.log(\"占比: \" + ratio)\n\n        console.log(trc20Contract, lpContract)\n\n        let lpTotal = await this.getContractToUSDT(trc20Contract, lpContract)\n        lpTotal     = lpTotal / 1e18\n\n        console.log(\"LP 占 trc20 数量: \" + lpTotal)\n\n        let tig = await this.getTrxToTokenPrice(baseTokenContract, 1)\n        tig     = 1 / (tig / 1e12)\n\n        let toTrx = await this.getTrxToTokenPrice(lpContract, 1)\n        toTrx     = 1 / (toTrx / 1e12)\n\n        let a = (ratio * (lpTotal * 2) * toTrx)\n\n        console.log(\"1 token: \" + tig + \"trx\")\n        console.log(\"1 token to trx: \" + toTrx + \"trx\")\n        console.log(\"a市值: \" + a)\n\n        fixedRate = fixedRate || 0\n\n        let usdtToTrx = await this.getTokenUSDTPrice(\"TQn9Y2khEsLJW1ChVWFMSMeRDow5KcbLSE\", 1e6)\n        usdtToTrx     = usdtToTrx / 1e6\n        console.log(\"1 trx: \" + usdtToTrx + \"usdt\")\n\n        let a_rate = (fixedRate * tig) / a\n\n        console.log(\"a_rate: \" + a_rate)\n\n        // console.log(\"年化: \" + Math.pow(a_rate + 1, 356) * 100)\n        let yearRate = ((a_rate + 1) * 356) * 100\n\n        console.log(\"年化: \" + yearRate)\n        console.log(\"----------\")\n\n        return new Promise((resolve, reject) => {\n            resolve(Math.floor(yearRate))\n        })\n    }\n\n    async poolUSDTYearRate(trc20Contract, poolContract, lpContract, baseTokenContract, fixedRate) {\n        console.log(trc20Contract, poolContract, lpContract, baseTokenContract)\n\n        let myLP   = await this.getLP(poolContract)\n        let fullLP = await this.getLP(lpContract)\n        let ratio  = myLP / fullLP\n\n        console.log(\"myLP: \" + myLP)\n        console.log(\"fullLP: \" + fullLP)\n        console.log(\"占比: \" + ratio)\n\n        let lpTotal = await this.getContractToUSDT(trc20Contract, lpContract)\n        lpTotal     = lpTotal / 1e6\n\n        console.log(\"LP 占 trc20 数量: \" + lpTotal)\n\n\n        let a = ratio * (lpTotal * 2)\n\n        console.log(\"a市值: \" + a)\n\n        // let fieldRate = 642857\n        fixedRate = fixedRate || 0\n\n        let tig = await this.getTrxToTokenPrice(baseTokenContract, 1)\n        tig     = 1 / (tig / 1e12)\n        console.log(\"1 token: \" + tig + \"trx\")\n\n        let usdtToTrx = await this.getTokenUSDTPrice(\"TQn9Y2khEsLJW1ChVWFMSMeRDow5KcbLSE\", 1e6)\n        usdtToTrx     = usdtToTrx / 1e6\n        console.log(\"1 trx: \" + usdtToTrx + \"usdt\")\n\n        // myLP: 98455000\n        // wallet.js:565 fullLP: 2118588115628446\n        // wallet.js:566 占比: 4.647198729838757e-8\n        // wallet.js:571 LP 占 trc20 数量: 64125433.456946\n        // wallet.js:532 1 token: 0.0169127445614111trx\n        // wallet.js:576 a市值: 5.960072658229584\n        // wallet.js:593 a_rate: 5.056624220777389\n        // wallet.js:598 年化: 215615.82225967504\n\n        let a_rate = (fixedRate * tig * usdtToTrx) / a\n\n        console.log(\"a_rate: \" + a_rate)\n\n        // console.log(\"年化: \" + Math.pow(a_rate + 1, 356) * 100)\n        let yearRate = ((a_rate + 1) * 356) * 100\n\n        console.log(\"年化: \" + yearRate)\n        console.log(\"----------\")\n\n        return new Promise((resolve, reject) => {\n            resolve(Math.floor(yearRate))\n        })\n    }\n\n\n    async readMint(contractAddress) {\n        const contract = await this.tronWrap.contract().at(contractAddress)\n\n        const result = await contract.starttime().call()\n\n        return this.tronWrap.toDecimal(result)\n    }\n\n    async rewardRate(contractAddress) {\n        const contract = await this.tronWrap.contract().at(contractAddress)\n\n        const result = await contract.rewardRate().call()\n\n        return this.tronWrap.toDecimal(result)\n    }\n}\n\nexport default new Wallet()\n"]},"metadata":{},"sourceType":"module"}